{"version":3,"file":"static/js/64.efe70d57.chunk.js","mappings":"2IAmBA,IAdA,SAAoB,GAA8B,IAA7BA,EAAI,EAAJA,KAAMC,EAAW,EAAXA,YACjBC,GADqC,EAAPC,SAClBC,EAAAA,EAAAA,WAClB,OACI,+BACA,mBAAQC,KAAK,SAASC,IAAOJ,EAAWK,OAAO,QAAQC,QAASP,EAAaQ,UAAU,+LAA8L,SAChRT,KAOb,C,uDCPA,IATA,SAAe,GAAe,IAAbU,EAAQ,EAARA,SACb,GAA8BC,EAAAA,EAAAA,WAAS,GAAM,eAAtCC,EAAO,KAAEC,EAAU,KAC1B,OACI,gBAAKL,QAAS,kBAAMK,GAAYD,EAAQ,EAAEH,UAAS,UAAKG,EAAU,GAAK,sGAAqG,sDAAqD,SAC5NF,GAGb,C,oCCAA,IARA,SAAc,GAAY,IAAXA,EAAQ,EAARA,SACX,OACI,2BACKA,GAGb,C,oCCEA,IARA,SAAc,GAAY,IAAXA,EAAQ,EAARA,SACX,OACI,wBACKA,GAGb,C,oCCEA,IARA,SAAc,GAAY,IAAXA,EAAQ,EAARA,SACX,OACI,kBAAOD,UAAU,gDAA+C,SAC3DC,GAGb,C,oCCEA,IARA,SAAa,GAAY,IAAXA,EAAQ,EAARA,SACV,OACI,eAAID,UAAU,kBAAiB,SAC1BC,GAGb,C,oCCEA,IARA,SAAe,GAAY,IAAXA,EAAQ,EAARA,SACZ,OACI,kBAAOD,UAAU,eAAc,SAC1BC,GAGb,C,gUCoOA,IAAMI,EAAS,SAACC,GAAI,OAAKC,EAAAA,KAAaC,MAAM,CACxCC,KAAe,WAATH,EAAoBC,EAAAA,KAAaG,UAAS,GAASH,EAAAA,KAAaI,WAAWC,IAAI,GAAGC,IAAI,IAC5FC,SAAkB,WAATR,EAAoBC,EAAAA,KAAaG,UAAS,GAAQH,EAAAA,KAAaI,WAAWC,IAAI,GAAGC,IAAI,IAC9FE,QAAiB,WAATT,EAAoBC,EAAAA,KAAaG,UAAS,GAAQH,EAAAA,KAAaI,WACvEK,SAAmB,WAATV,EAAoBC,EAAAA,KAAYU,GACtCV,EAAAA,KAAaC,MAAM,CACfU,GAAGX,EAAAA,KAAaI,cAEpBJ,EAAAA,KAAaG,UAAS,IAC5B,EAEF,EArOA,SAAc,GAAwC,IAAD,MAAtCP,EAAO,EAAPA,QAASgB,EAAa,EAAbA,cAAeb,EAAI,EAAJA,KAAMc,EAAM,EAANA,OAEnCC,GAAQC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,KAAK,IACnD,GAAqFI,EAAAA,EAAAA,IAAQ,CACzFC,UAASC,EAAAA,EAAAA,GAAYtB,EAAOC,MADzBsB,EAAY,EAAZA,aAAcC,EAAM,EAANA,OAAQC,EAAQ,EAARA,SAA4BC,GAAT,EAATC,UAAgB,EAALC,MAAe,EAARF,UAAUG,EAAO,EAAPA,QAASC,EAAK,EAALA,MAG5E,GAAyCC,EAAAA,EAAAA,IAAc,CACnDF,QAAAA,EACAzB,KAAK,WACL4B,QAAQ,QAHLC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAKvB,GALqC,EAANC,QAKDvC,EAAAA,EAAAA,aAAU,eAAjCwC,EAAO,KACd,GAD0B,MACQxC,EAAAA,EAAAA,UAAS,KAAG,eAAvCyC,EAAS,KAAEC,EAAY,MAE9BC,EAAAA,EAAAA,YAAU,WACH1C,GAAkB,WAAPG,GACVwC,GAASC,EAAAA,EAAAA,IAAI,CACTC,IAAI,4BAAD,OAA6B5B,EAAOF,IACvCG,MAAAA,EACA4B,OAAQ,SAACC,GACgB,IAAD,IAAjBA,EAASC,SACRP,EAA0B,QAAd,EAACM,EAASE,YAAI,aAAb,EAAeC,cAC5BvB,EAAS,WAAoB,OAARoB,QAAQ,IAARA,GAAc,QAAN,EAARA,EAAUE,YAAI,WAAN,EAAR,EAAgBE,WAErCC,EAAAA,GAAAA,MAAY,gBAEpB,IAGZ,GAAG,CAACpD,IAEJ,IAmCA,GAA0BD,EAAAA,EAAAA,UAAS,IAAG,eAAxBsD,GAAF,KAAU,MAChBV,GAAWW,EAAAA,EAAAA,MA+BjB,OA9BAZ,EAAAA,EAAAA,YAAU,WACNC,GAASC,EAAAA,EAAAA,IAAI,CACTC,IAAI,qBACJ3B,MAAAA,EACA4B,OAAQ,SAACC,GACgB,IAAD,EAAjBA,EAASC,QACRK,EAA2B,QAAnB,EAACN,EAASE,KAAKM,YAAI,aAAlB,EAAoBC,KAAI,SAAAC,GAC7B,MAAO,CAACC,MAAMD,EAAKnD,KAAMqD,MAAMF,EAAK1C,GACxC,KAEAqC,EAAAA,GAAAA,MAAY,gBAEpB,IAER,GAAG,CAACpD,KAiBA,SAAC4D,EAAA,EAAc,CACX5D,QAASA,EACTgB,cAAe,WACXA,IACAyB,EAAa,IACbT,EAAM,CAAC1B,KAAK,GAAIK,SAAS,GAAIC,QAAQ,GAAIC,SAAS,IACtD,EAEAgD,MAAM,eACNC,KAAe,WAAP3D,EAAkB,KAAO,GAAG,UAEpC,kBAAM4D,SAAUtC,GA/EP,SAACwB,GACd,GAAY,WAAT9C,EAAkB,CAAC,IAAD,EACb6D,EAAwB,QAAhB,EAAGf,EAAKpC,gBAAQ,aAAb,EAAeoD,QAAO,SAAAR,GAAI,OAAKA,EAAKS,MAAM,IACtDF,EAASG,QACRxB,GAASyB,EAAAA,EAAAA,IAAK,CACVvB,IAAI,0BAAD,OAAiC,OAAN5B,QAAM,IAANA,OAAM,EAANA,EAAQF,IACtCG,MAAAA,EACA+B,KAAKe,EACLlB,OAAQ,SAACC,GACFA,EAASC,QACRqB,QAAQC,IAAI,SAEZlB,EAAAA,GAAAA,MAAY,gBAEpB,IAGZ,CACY,WAATjD,GACCwC,GAASyB,EAAAA,EAAAA,IAAK,CACVvB,IAAI,yBACJ3B,MAAAA,EACA+B,KAAAA,EACAH,OAAQ,SAACC,GACFA,EAASC,SACRqB,QAAQC,IAAI,SACZtD,KAEAoC,EAAAA,GAAAA,MAAY,aAEpB,IAIZ,IA6CgDvD,UAAU,yDAAwD,UAC9F,QAAPM,GACD,+BACA,iBAAKN,UAAU,uBAAsB,WACjC,iBAAKA,UAAU,uBAAsB,WACjC,wFACA,kCAAOJ,KAAK,QAAWmC,EAAS,SAAO,IACnC2C,aAAa,QACb1E,UAAS,UAAW,OAAN6B,QAAM,IAANA,GAAAA,EAAQpB,KAAO,uCAAyC,kBAAiB,uHACvFkE,YAAY,wIAEhB,cAAG3E,UAAU,kEAAiE,SACnE,OAAN6B,QAAM,IAANA,GAAY,QAAN,EAANA,EAAQpB,YAAI,WAAN,EAAN,EAAcmE,cAGvB,iBAAK5E,UAAU,uBAAsB,WACjC,yCACA,kCAAOJ,KAAK,YAAemC,EAAS,aAAW,IAC3C2C,aAAa,QACb1E,UAAS,UAAW,OAAN6B,QAAM,IAANA,GAAAA,EAAQf,SAAW,uCAAyC,kBAAiB,uHAC3F6D,YAAY,wIAEhB,cAAG3E,UAAU,kEAAiE,SACnE,OAAN6B,QAAM,IAANA,GAAgB,QAAV,EAANA,EAAQf,gBAAQ,WAAV,EAAN,EAAkB8D,cAG3B,gBAAK5E,UAAU,uBAAsB,UACjC,SAAC,KAAU,CACPkC,QAAWA,EACXzB,KAAK,UACLoE,OAAU,oBAAEC,MAASC,EAAQ,EAARA,SAAUjB,EAAK,EAALA,MAAK,OACpC,SAACkB,EAAA,GAAM,CACHnB,MAAQ,cACRkB,SAAUA,EACVjB,MAASA,EACTV,KAAM,CAAC,CAACS,MAAM,aAAcC,MAAM,GAAI,CAACD,MAAM,YAAaC,MAAM,IAChEa,YAAa,iBACf,YAOd,+BACA,iBAAK3E,UAAU,yGAAwG,WACnH,gBAAKA,UAAU,iGAAgG,SACjG,OAAT2C,QAAS,IAATA,OAAS,EAATA,EAAWgB,KAAI,SAACC,EAAMqB,GACnB,OACI,iBAAiBjF,UAAS,UAAKiF,EAAQ,IAAM,EAAI,eAAiB,gBAAe,gFAA+E,WAC5J,SAACC,EAAA,EAAK,UAAEtB,EAAKnD,QACb,SAAC0E,EAAA,EAAU,CAAC3F,YAAa,WACrB+C,GAAO,UAAIqB,IACXhB,EAAaD,EAAUyB,QAAO,SAAAgB,GAAK,OAAKxB,EAAK1C,MAAOkE,EAAMlE,EAAE,IAChE,EAAG3B,MAAM,SAAC8F,EAAA,EAAO,CAACrF,UAAU,kBALtBiF,EAQlB,OAEJ,gBAAKjF,UAAU,oCAClB,gBAAKA,UAAS,UAAW,OAAN6B,QAAM,IAANA,GAAkB,QAAZ,EAANA,EAAQyD,kBAAU,OAAlB,EAAoBV,QAAU,wCAA0C,GAAE,oGAAoG,SACzLtC,EAAOqB,KAAI,SAACmB,EAAOG,GAChB,OACI,iBAAiBjF,UAAS,UAAKiF,EAAQ,IAAM,EAAI,eAAiB,gBAAe,wFAAuF,WACpK,gBAAMjF,UAAS,mDAAqD,UAChE,SAACkF,EAAA,EAAK,UAAEJ,EAAMrE,UAElB,gBAAKT,UAAU,qDAAoD,SAC9D8E,EAAMT,QACH,gBAAKrE,UAAU,oDAAmD,UAE9D,SAACmF,EAAA,EAAU,CAAE3F,YAAe,YAlGtC,SAAC0B,EAAK+D,GAEpCnC,GAASyB,EAAAA,EAAAA,IAAK,CACVvB,IAAI,4BAAD,OAA6B9B,GAChCG,MAAAA,EACA4B,OAAQ,SAACC,GACFA,EAASC,QACRX,EAAOyC,GAEP1B,EAAAA,GAAAA,MAAY,gBAEpB,IAGR,CAqFgDgC,CAA0BT,EAAMT,OAAQY,GAExCrC,EAAa,GAAD,eAAKD,GAAS,CAAE,CAACzB,GAAG4D,EAAM5D,GAAIT,KAAKqE,EAAMrE,QACzD,EAEIlB,MAAQ,SAACiG,EAAA,EAAO,CAACxF,UAAU,kBAIvC,gBAAKA,UAAU,oDAAmD,UAC9D,SAACmF,EAAA,EAAU,CAAC3F,YAAa,WAErBgD,EAAOyC,EACX,EAAG1F,MAAM,SAACkG,EAAA,EAAe,CAACzF,UAAU,sBAtBtCiF,EA2BjB,YAKT,mBAAQrF,KAAK,SAAS8F,SAAUhD,EAAS1C,UAAU,wQAAuQ,SACrT0C,GACG,gBAAK1C,UAAU,aAAY,UAAC,SAAC2F,EAAA,EAAM,CAAC1B,KAAK,UAE7C,gBAAKjE,UAAU,wCAAuC,SAAS,WAAPM,EAAkB,mDAAa,2DAO3G,E,UCzNiBsF,EAAWC,EAAQ,MAA5BC,QAER,SAASC,EAAQxE,EAAO0B,GAEpB,OADAuB,QAAQC,IAAIxB,GACLA,EAAOrD,MACV,IAAK,WACD,OAAO,kBACA2B,GAAK,IACR6B,KAAKH,EAAO+C,QAAQtC,OAG5B,IAAK,aACD,OAAO,kBACAnC,GAAK,IACRpB,SAAQ,EACRG,KAAK,QAEb,IAAK,cACD,OAAO,kBACAiB,GAAK,IACRpB,SAAQ,IAEhB,IAAK,aACD,OAAO,kBACAoB,GAAK,IACRpB,SAAQ,EACRG,KAAK,SACLc,OAAO6B,EAAO+C,UAEtB,QACI,OAAO,UACAzE,GAGnB,CA2FA,IAAM0E,EAAS,SAAH,OAAKzG,EAAW,EAAXA,YAAW,OACxB,gBAAKQ,UAAU,6CAA4C,UAC3D,gBAAKA,UAAU,OAAM,UACjB,SAACmF,EAAA,EAAU,CAAC3F,YAAaA,EAAaD,MAAM,SAAC8F,EAAA,EAAO,CAACrF,UAAU,kBAEjE,EAGN,EAjGA,WAAsB,IAAD,EAEjB,GAA0BkG,EAAAA,EAAAA,YAAWH,EAAS,CAC1C3C,KAAK,GAAIV,SAAQ,EAAOvC,SAAQ,EAAOiB,OAAO,CAAC,IACjD,eAFKG,EAAK,KAAE4E,EAAQ,KAGhB9E,GAAQC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAEA,EAAMC,KAAKH,KAAK,IAC3CyB,GAAWW,EAAAA,EAAAA,MACX2C,EAAQ,CACV,EAAE,aACF,EAAE,aAgBN,OAdAvD,EAAAA,EAAAA,YAAU,WACNC,GAASC,EAAAA,EAAAA,IAAI,CACTC,IAAI,sBACJ3B,MAAAA,EACA4B,OAAQ,SAACC,GACFA,EAASC,QACRgD,EAAS,CAACvG,KAAK,WAAYoG,QAAQ9C,EAASE,OAE5CG,EAAAA,GAAAA,MAAY,gBAEpB,IAER,GAAG,KAGC,UAACqC,EAAM,CACHS,QAAQ,SAACJ,EAAM,CACXzG,YAAa,kBAAI2G,EAAS,CAACvG,KAAK,aAAcoG,QAAQ,IAAI,IAEjE,WACG,SAAC,EAAI,CACD7F,QAASoB,EAAMpB,QACfgB,cAAe,kBAAIgF,EAAS,CAACvG,KAAK,cAAeoG,QAAQ,IAAI,EAC7D1F,KAAQiB,EAAMjB,KACdc,OAAUG,EAAMH,SAEnBG,EAAMmB,SAEH,SAAC4D,EAAA,EAAQ,CAAC5D,QAASnB,EAAMmB,WAEzB,gBAAK1C,UAAU,0CAAyC,UACpD,UAACuG,EAAA,EAAK,YACF,SAACC,EAAA,EAAI,WACL,SAACC,EAAA,EAAG,WACA,iCACI,SAACC,EAAA,EAAI,CAAC1G,UAAU,kEAAiE,UAC7E,oCAEJ,SAAC0G,EAAA,EAAI,CAAC1G,UAAU,kEAAiE,UAC7E,sCAEJ,SAAC0G,EAAA,EAAI,CAAC1G,UAAU,kEAAiE,UAC7E,sCAEJ,SAAC0G,EAAA,EAAI,CAAC1G,UAAU,kEAAiE,UAC7E,6CAKZ,SAAC2G,EAAA,EAAI,UACU,QADV,EACApF,EAAM6B,YAAI,aAAV,EAAYO,KAAI,SAAAC,GAAI,OACjB,SAAC6C,EAAA,EAAG,WACJ,iCACI,SAACC,EAAA,EAAI,CAAC1G,UAAU,MAAK,SAChB4D,EAAK1C,MAEV,SAACwF,EAAA,EAAI,CAAC1G,UAAU,MAAK,SAChB4D,EAAKnD,QAEV,SAACiG,EAAA,EAAI,CAAC1G,UAAU,MAAK,SAChBoG,GAAOxC,EAAK7C,YAEjB,SAAC2F,EAAA,EAAI,CAAC1G,UAAU,MAAK,UACjB,SAACmF,EAAA,EAAU,CAAC3F,YAAa,kBAAI2G,EAAS,CAACvG,KAAK,aAAcoG,QAAQpC,GAAM,EAAErE,MAAM,SAACqH,EAAA,EAAM,CAAC5G,UAAU,qBAZ9F4D,EAAK1C,GAeX,aAStC,C","sources":["components/IconButton.js","components/Label.js","components/Table/Body.js","components/Table/Cell.js","components/Table/Head.js","components/Table/Row.js","components/Table/Table.js","pages/Operators/Form.js","pages/Operators/index.js"],"sourcesContent":["import Tooltips from \"@material-tailwind/react/Tooltips\";\nimport TooltipsContent from \"@material-tailwind/react/TooltipsContent\";\nimport React, { useRef } from \"react\";\n\n\nfunction IconButton({icon, handleClick, tooltip}){\n    const buttonRef = useRef();\n    return(\n        <>\n        <button type=\"button\" ref = {buttonRef} ripple=\"light\" onClick={handleClick} className=\"flex justify-center items-center w-10 h-10 mx-2 hover:text-white hover:bg-indigo-600 active:bg-white active:text-indigo-600 rounded-md focus:outline-none shadow-lg text-indigo-600 bg-white\">\n            {icon}\n        </button>\n        {/* <Tooltips placement=\"top\" ref={buttonRef}>\n            <TooltipsContent>{tooltip}</TooltipsContent>\n        </Tooltips> */}\n    </>\n    );\n};\n\nexport default IconButton;","import { useState } from 'react';\nfunction Label({ children }) {\n    const [visible, setVisible] = useState(false);\n    return (\n        <div onClick={() => setVisible(!visible)} className={`${visible ? '' : 'w-full sm:max-w-200 md:max-w-250 lg:max-w-xs overflow-ellipsis overflow-hidden md:whitespace-nowrap'} text-base hover:text-blue-500 cursor-pointer px-2`}>\n            {children}\n        </div>\n    )\n};\n\nexport default Label;","function Body({children}){\n    return(\n        <tbody>\n            {children}\n        </tbody>\n    );\n};\n\nexport default Body;","function Cell({children}){\n    return(\n        <td>\n            {children}\n        </td>\n    );\n};\n\nexport default Cell;","function Head({children}){\n    return(\n        <thead className=\"sticky top-0 border-b text-left bg-white z-30\">\n            {children}\n        </thead>\n    );\n};\n\nexport default Head;","function Row({children}){\n    return(\n        <tr className=\"border-b w-full\">\n            {children}\n        </tr>\n    )\n};\n\nexport default Row;","function Table({children}){\n    return(\n        <table className=\"table w-full\">\n            {children}\n        </table>\n    );\n};\n\nexport default Table;","import { Controller, useFieldArray, useForm } from 'react-hook-form';\nimport ModalContainer from '../../components/ModalContainer';\nimport * as Yup from \"yup\"\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { Select } from '@mantine/core';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { get, post } from '../../application/middlewares';\nimport { toast } from 'react-hot-toast';\nimport Loader from '../../components/Loader';\nimport Label from \"../../components/Label\";\nimport IconButton from '../../components/IconButton';\nimport {BiTrash} from \"@react-icons/all-files/bi/BiTrash\"\nimport {MdDeleteForever} from \"@react-icons/all-files/md/MdDeleteForever\" \nimport { IoMdAdd } from '@react-icons/all-files/io/IoMdAdd';\n\nfunction Form({visible, setCloseModal, form, values}){\n\n    const token = useSelector(state => state.auth.token)\n    const {handleSubmit, errors, setValue, getValues, watch, register, control, reset} = useForm({\n        resolver:yupResolver(schema(form))\n    })\n    const {fields, append, remove, update} = useFieldArray({\n        control,\n        name:\"sls_mans\",\n        keyName:\"key\"\n    })\n    const [loading, setLoading] = useState();\n    const [salesMans, setSalesMans] = useState([])\n\n    useEffect(()=>{\n        if(visible && form===\"update\"){\n            dispatch(get({\n                url:`api/admin/get-sales-mans/${values.id}`,\n                token,\n                action: (response) =>{\n                    if(response.success){\n                        setSalesMans(response.data?.not_included)\n                        setValue(\"sls_mans\", response?.data?.included)\n                    }else{\n                        toast.error(\"Unknown error\")\n                    }\n                }\n            }))\n        }\n    }, [visible])\n\n    const onSubmit = (data) =>{\n        if(form === \"update\"){\n            let new_data = data.sls_mans?.filter(item => !item.usm_id)\n            if(new_data.length){\n                dispatch(post({\n                    url:`api/admin/add-sls-mans/${values?.id}`,\n                    token, \n                    data:new_data,\n                    action: (response) =>{\n                        if(response.success){\n                            console.log(\"Hello\")\n                        }else{\n                            toast.error(\"Unknown error\")\n                        }\n                    }\n                }))\n            }\n        }\n        if(form !== \"update\"){\n            dispatch(post({\n                url:`api/admin/add-operator`,\n                token,\n                data,\n                action: (response) =>{\n                    if(response.success){\n                        console.log(\"hello\");\n                        setCloseModal()\n                    }else{\n                        toast.error(\"Some error\")\n                    }\n                }\n            }))\n        }\n        \n    }\n    const [firms, setFirms] = useState([])\n    const dispatch = useDispatch()\n    useEffect(()=>{\n        dispatch(get({\n            url:`api/user/get-firms`,\n            token, \n            action: (response) =>{\n                if(response.success){\n                    setFirms(response.data.rows?.map(item => {\n                        return {label:item.name, value:item.id}\n                    }))\n                }else{\n                    toast.error(\"Unknown error\")\n                }\n            }\n        }))\n    }, [visible])\n    const handleDeleteTypeSpecValue = (id,  index) =>{\n        // console.log(item)\n        dispatch(post({\n            url:`api/admin/delete-sls-man/${id}`,\n            token, \n            action: (response) =>{\n                if(response.success){\n                    remove(index)\n                }else{\n                    toast.error(\"Unknown error\")\n                }\n            }\n        }))\n\n    } \n    return (\n        <ModalContainer\n            visible={visible}\n            setCloseModal={()=>{\n                setCloseModal();\n                setSalesMans([]);\n                reset({name:\"\", password:\"\", role_id:\"\", sls_mans:[]})\n            }\n            }\n            title=\"Operator add\"\n            size = {form===\"update\" ? \"lg\" : \"\"}\n        >\n            <form onSubmit={handleSubmit(onSubmit)} className=\"w-full pb-12 flex flex-col justify-center items-center\">\n                {form===\"add\" ?\n                <>\n                <div className='w-full flex flex-col'>\n                    <div className=\"relative w-full mb-6\">\n                        <label>Полное Имя</label>\n                        <input type=\"text\" {...register(\"name\")}\n                            autoComplete=\"false\"\n                            className={`${errors?.name ? 'border-2 border-red-300 ring-red-100' : 'ring-indigo-600'} px-3 shadow-inner h-10 w-full text-base bg-gray-50 rounded-md z-20 focus:bg-white focus:outline-none focus:ring-2 `}\n                            placeholder=\"напр. Довран Джумакулыев\"\n                        />\n                        <p className=\"absolute bottom-0 left-0 -mb-4 text-xs font-medium text-red-400\">\n                            {errors?.name?.message}\n                        </p>\n                    </div>\n                    <div className=\"relative w-full mb-6\">\n                        <label>password</label>\n                        <input type=\"password\" {...register(\"password\")}\n                            autoComplete=\"false\"\n                            className={`${errors?.password ? 'border-2 border-red-300 ring-red-100' : 'ring-indigo-600'} px-3 shadow-inner h-10 w-full text-base bg-gray-50 rounded-md z-20 focus:bg-white focus:outline-none focus:ring-2 `}\n                            placeholder=\"напр. Довран Джумакулыев\"\n                        />\n                        <p className=\"absolute bottom-0 left-0 -mb-4 text-xs font-medium text-red-400\">\n                            {errors?.password?.message}\n                        </p>\n                    </div>\n                    <div className='relative w-full mb-6'>\n                        <Controller\n                            control = {control}\n                            name=\"role_id\"\n                            render = {({field : {onChange, value}})=>\n                            <Select\n                                label = \"Select frim\"\n                                onChange={onChange}\n                                value = {value}\n                                data={[{label:\"Supervisor\", value:3}, {label:\"Moderator\", value:2}]}\n                                placeholder={\"Birini saylan\"}\n                            />\n                            }\n                        />\n                    </div>\n                </div>\n                </>\n                :\n                <>\n                <div className=\"relative flex flex-row w-full mb-4 shadow-inner bg-gray-50 lg:h-96 lg:max-h-96 h-64 max-h-64 min-w-600\" >\n                    <div className=\"relative w-1/2 flex flex-col justify-start items-start px-2 rounded-lg h-full  overflow-y-auto\">\n                        {salesMans?.map((item, index) => {\n                            return(\n                                <div key={index} className={`${index % 2 === 0 ? 'bg-green-100' : 'bg-yellow-100'} w-full rounded-lg my-2 px-2 py-1 flex flex-row justify-between items-center`}>\n                                    <Label>{item.name}</Label>\n                                    <IconButton handleClick={() => {\n                                        append({...item});\n                                        setSalesMans(salesMans.filter(item2 => +item.id!== +item2.id))\n                                    }} icon={<IoMdAdd className=\"text-2xl \"/>}/>\n                                </div>\n                            )\n                        })}\n                    </div>\n                    <div className=\"w-1 h-full bg-blue-300 rounded\"></div>\n                 <div className={`${errors?.sales_mans?.message ? ' border-red-300 ring-red-100 border-2' : '' } relative w-1/2 flex flex-col justify-start items-start px-2  rounded-lg h-full  overflow-y-auto`}>\n                        {fields.map((field, index) => {\n                            return (\n                                <div key={index} className={`${index % 2 === 0 ? 'bg-green-100' : 'bg-yellow-100'} w-full flex flex-col md:flex-row justify-center  lg:items-end my-2 px-2 rounded-md `}>\n                                    <div  className={`w-full flex justify-start items-center md:h-full`}>\n                                        <Label>{field.name}</Label>\n                                    </div>\n                                    <div className=\"w-48 flex justify-center items-center mt-6 lg:mt-0\">\n                                        {field.usm_id ?\n                                            <div className=\"w-full flex flex-row justify-between items-center\">\n                                                {/* <Switcher item_id={field.id} status={!field.deleted} handleStatus={(enabled) => handleDeleteTypeSpecValue(field, index, enabled)}/> */}\n                                                <IconButton  handleClick = {() => {\n                                                    handleDeleteTypeSpecValue(field.usm_id, index)\n                                                    // remove(index);\n                                                    setSalesMans([...salesMans, {id:field.id, name:field.name}])\n                                                }\n                                                }\n                                                    icon = {<BiTrash className='text-2xl'/>}\n                                                />\n                                            </div>\n                                        :  \n                                        <div className=\"w-full flex flex-row justify-between items-center\">\n                                            <IconButton handleClick={() => {\n                                                // setState({type:'ADD_ITEM', payload:{spec_id:field.spec_id, name_ru:field.name_ru, name_tm:field.name_tm, absolute_name:field.absolute_name }})\n                                                remove(index);\n                                            }} icon={<MdDeleteForever className=\"text-2xl \"/>}/>\n                                        </div>\n                                        }\n                                    </div>\n                                </div>\n                        )})}\n                    </div>\n                    </div>\n                </>\n                }\n                <button type=\"submit\" disabled={loading} className=\"w-40 flex remove-button-bg justify-center items-center px-4 h-15 text-white transform ease-in-out duration-300 hover:scale-110 active:scale-100 font-semibold text-base rounded-full bg-green-500 hover:bg-green-400 active:bg-green-500 focus:outline-none shadow-md\">\n                    {loading ?\n                        <div className=\"w-12 h-10 \"><Loader size=\"sm\" /></div>\n                    :\n                    <div className=\"h-10 flex justify-center items-center\">{form===\"update\" ? \"Обновить\" : \"Добавить\" }</div> \n                    }\n                </button>\n\n            </form>\n        </ModalContainer>\n    )\n}\n\nconst schema = (form) => Yup.object().shape({\n    name: form === \"update\" ? Yup.string().nullable(true) :  Yup.string().required().min(3).max(15),\n    password:form === \"update\" ? Yup.string().nullable(true) : Yup.string().required().min(5).max(15),\n    role_id:form === \"update\" ? Yup.string().nullable(true) : Yup.number().required(),\n    sls_mans: form === \"update\" ? Yup.array().of(\n        Yup.object().shape({\n            id:Yup.number().required()\n        })\n    ) : Yup.string().nullable(true)\n})\n\nexport default Form","import { useEffect, useReducer } from \"react\";\nimport BgLoader from \"../../components/BgLoader\";\nimport Row from \"../../components/Table/Row\";\nimport Table from \"../../components/Table/Table\";\nimport Cell from \"../../components/Table/Cell\";\nimport Head from \"../../components/Table/Head\";\nimport Body from \"../../components/Table/Body\";\nimport Form from \"./Form\"\nimport IconButton from \"../../components/IconButton\";\nimport { IoMdAdd } from \"@react-icons/all-files/io/IoMdAdd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { get } from \"../../application/middlewares\";\nimport { toast } from \"react-hot-toast\";\nimport { BiEdit } from \"@react-icons/all-files/bi/BiEdit\";\n\nconst { default: Layout } = require(\"../../components/Layout\");\n\nfunction reducer(state, action){\n    console.log(action)\n    switch(action.type){\n        case \"SET_DATA\":\n            return {\n                ...state,\n                data:action.payload.rows\n\n            }\n        case \"OPEN_MODAL\":\n            return {\n                ...state,\n                visible:true,\n                form:\"add\"\n            }\n        case \"ClOSE_MODAL\":\n            return {\n                ...state,\n                visible:false\n            }\n        case \"EDIT_MODAL\":\n            return {\n                ...state, \n                visible:true,\n                form:\"update\",\n                values:action.payload\n            }\n        default: \n            return {\n                ...state\n            }\n    }\n}\n\nfunction Operators (){\n\n    const [state, setState] = useReducer(reducer, {\n        data:[], loading:false, visible:false, values:{}\n    })\n    const token = useSelector(state=>state.auth.token)\n    const dispatch = useDispatch()\n    const roles = {\n        3:\"Supervisor\",\n        2:\"Moderator\",\n    }\n    useEffect(()=>{\n        dispatch(get({\n            url:`api/admin/get-users`,\n            token,\n            action: (response) =>{\n                if(response.success){\n                    setState({type:\"SET_DATA\", payload:response.data})\n                }else{\n                    toast.error(\"Unknown error\")\n                }\n            }\n        }))\n    }, [])\n\n    return (\n        <Layout \n            header={<Header\n                handleClick={()=>setState({type:\"OPEN_MODAL\", payload:\"\"})}\n            />\n        }>\n            <Form\n                visible={state.visible}\n                setCloseModal={()=>setState({type:\"ClOSE_MODAL\", payload:\"\"})}\n                form = {state.form}\n                values = {state.values}\n            />\n            {state.loading \n            ? \n                <BgLoader loading={state.loading}/>\n            :\n                <div className=\"w-full h-full px-6 py-6 overflow-y-auto\">\n                    <Table>\n                        <Head>\n                        <Row>\n                            <>\n                                <Cell className=\"px-2 py-4 font-medium flex flex-row justify-center items-center\">\n                                    <span>ID</span>\n                                </Cell>\n                                <Cell className=\"px-2 py-4 font-medium flex flex-row justify-center items-center\">\n                                    <span>Name</span>\n                                </Cell>\n                                <Cell className=\"px-2 py-4 font-medium flex flex-row justify-center items-center\">\n                                    <span>Role</span>\n                                </Cell>\n                                <Cell className=\"px-2 py-4 font-medium flex flex-row justify-center items-center\">\n                                    <span>Edit</span>\n                                </Cell>\n                            </>\n                        </Row>\n                        </Head>\n                        <Body>\n                            {state.data?.map(item => (\n                                <Row key = {item.id}>\n                                <>\n                                    <Cell className=\"p-2\">\n                                        {item.id}\n                                    </Cell>\n                                    <Cell className=\"p-2\">\n                                        {item.name}\n                                    </Cell>\n                                    <Cell className=\"p-2\">\n                                        {roles[+item.role_id]}\n                                    </Cell>\n                                    <Cell className=\"p-2\">\n                                        <IconButton handleClick={()=>setState({type:\"EDIT_MODAL\", payload:item})} icon={<BiEdit className=\"text-2xl\"/>}/>\n                                    </Cell>\n                                </>\n                                </Row>\n                            ))}\n                            \n                        </Body>\n                    </Table>\n                </div>\n            }\n        </Layout>\n    )\n}\n\nconst Header = ({handleClick})=>(\n    <div className=\"flex flex-row justify-between items-center\">\n    <div className=\"w-80\">\n        <IconButton handleClick={handleClick} icon={<IoMdAdd className=\"text-2xl\"/>}/>\n    </div>\n</div>\n)\n\nexport default Operators;"],"names":["icon","handleClick","buttonRef","tooltip","useRef","type","ref","ripple","onClick","className","children","useState","visible","setVisible","schema","form","Yup","shape","name","nullable","required","min","max","password","role_id","sls_mans","of","id","setCloseModal","values","token","useSelector","state","auth","useForm","resolver","yupResolver","handleSubmit","errors","setValue","register","getValues","watch","control","reset","useFieldArray","keyName","fields","append","remove","update","loading","salesMans","setSalesMans","useEffect","dispatch","get","url","action","response","success","data","not_included","included","toast","setFirms","useDispatch","rows","map","item","label","value","ModalContainer","title","size","onSubmit","new_data","filter","usm_id","length","post","console","log","autoComplete","placeholder","message","render","field","onChange","Select","index","Label","IconButton","item2","IoMdAdd","sales_mans","handleDeleteTypeSpecValue","BiTrash","MdDeleteForever","disabled","Loader","Layout","require","default","reducer","payload","Header","useReducer","setState","roles","header","BgLoader","Table","Head","Row","Cell","Body","BiEdit"],"sourceRoot":""}